meta {
  name: 01 - Create Weight with Photo
  type: http
  seq: 2
}

post {
  url: {{baseUrl}}/weights
  body: multipartForm
  auth: bearer
}

auth:bearer {
  token: {{accessToken}}
}

body:multipart-form {
  weight: 72.0
  date: 2025-02-12
  notes: Test weight with photo from Bruno
  photo: @file()
}

script:post-response {
  if (res.status === 201 && res.body.id) {
    bru.setEnvVar("lastWeightId", res.body.id.toString());
    console.log("âœ… Weight with photo created, ID saved:", res.body.id);
    if (res.body.photo) {
      console.log("ðŸ“¸ Photo URLs are signed and secure");
    }
  }
}

tests {
  test("Weight with photo created successfully", function() {
    expect(res.status).to.equal(201);
    expect(res.body.id).to.be.a('number');
    expect(res.body.weight).to.equal("73.0");
    expect(res.body.photo).to.be.an('object');
    expect(res.body.photo.thumbnailUrl).to.include('/photos/secure/');
  });
}
